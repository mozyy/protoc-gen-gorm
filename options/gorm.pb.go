// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: options/gorm.proto

package options

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtraField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tag     string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Package string `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *ExtraField) Reset() {
	*x = ExtraField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraField) ProtoMessage() {}

func (x *ExtraField) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraField.ProtoReflect.Descriptor instead.
func (*ExtraField) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{0}
}

func (x *ExtraField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExtraField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtraField) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ExtraField) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

type GormFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GormFieldOptions) Reset() {
	*x = GormFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormFieldOptions) ProtoMessage() {}

func (x *GormFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormFieldOptions.ProtoReflect.Descriptor instead.
func (*GormFieldOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{1}
}

type GormTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column                 string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`                                                                   // column	指定 db 列名
	Type                   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                       // 列数据类型, 例如：bool、int、uint、float、string、time
	Size                   int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                                                                      // 指定列大小，例如：size:256
	PrimaryKey             bool   `protobuf:"varint,4,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`                                        // 指定列为主键
	Unique                 bool   `protobuf:"varint,5,opt,name=unique,proto3" json:"unique,omitempty"`                                                                  // 指定列为唯一
	Default                string `protobuf:"bytes,6,opt,name=default,proto3" json:"default,omitempty"`                                                                 // 指定列的默认值
	Precision              string `protobuf:"bytes,7,opt,name=precision,proto3" json:"precision,omitempty"`                                                             // 指定列的精度
	Scale                  int32  `protobuf:"varint,8,opt,name=scale,proto3" json:"scale,omitempty"`                                                                    // 指定列大小
	NotNull                bool   `protobuf:"varint,9,opt,name=not_null,json=notNull,proto3" json:"not_null,omitempty"`                                                 // 指定列为 NOT NULL
	AutoIncrement          bool   `protobuf:"varint,10,opt,name=auto_increment,json=autoIncrement,proto3" json:"auto_increment,omitempty"`                              // 指定列为自动增长
	AutoIncrementIncrement int32  `protobuf:"varint,11,opt,name=auto_increment_increment,json=autoIncrementIncrement,proto3" json:"auto_increment_increment,omitempty"` // 自动步长，控制连续记录之间的间隔
	Embedded               bool   `protobuf:"varint,12,opt,name=embedded,proto3" json:"embedded,omitempty"`                                                             // 嵌套字段
	EmbeddedPrefix         string `protobuf:"bytes,13,opt,name=embedded_prefix,json=embeddedPrefix,proto3" json:"embedded_prefix,omitempty"`                            // 嵌入字段的列名前缀
	AutoCreateTime         bool   `protobuf:"varint,14,opt,name=auto_create_time,json=autoCreateTime,proto3" json:"auto_create_time,omitempty"`                         // 创建时追踪当前时间
	AutoUpdateTime         bool   `protobuf:"varint,15,opt,name=auto_update_time,json=autoUpdateTime,proto3" json:"auto_update_time,omitempty"`                         // 创建/更新时追踪当前时间
	Index                  bool   `protobuf:"varint,16,opt,name=index,proto3" json:"index,omitempty"`                                                                   // 根据参数创建索引
	UniqueIndex            bool   `protobuf:"varint,17,opt,name=unique_index,json=uniqueIndex,proto3" json:"unique_index,omitempty"`                                    // 与 index 相同，但创建的是唯一索引
	Check                  string `protobuf:"bytes,18,opt,name=check,proto3" json:"check,omitempty"`                                                                    // 创建检查约束 https://gorm.io/zh_CN/docs/constraints.html
	// 设置字段读写的权限
	// <-:create 只创建、<-:update 只更新、<-:false 无写入权限、<- 创建和更新权限
	// ->:false 无读权限
	// - 无读写权限
	Permission string `protobuf:"bytes,19,opt,name=permission,proto3" json:"permission,omitempty"`
	Comment    string `protobuf:"bytes,20,opt,name=comment,proto3" json:"comment,omitempty"` // 迁移时为字段添加注释
	Tags       string `protobuf:"bytes,21,opt,name=tags,proto3" json:"tags,omitempty"`       // TODO: 自定义tags
}

func (x *GormTag) Reset() {
	*x = GormTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormTag) ProtoMessage() {}

func (x *GormTag) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormTag.ProtoReflect.Descriptor instead.
func (*GormTag) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{2}
}

func (x *GormTag) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *GormTag) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GormTag) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GormTag) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *GormTag) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *GormTag) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *GormTag) GetPrecision() string {
	if x != nil {
		return x.Precision
	}
	return ""
}

func (x *GormTag) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *GormTag) GetNotNull() bool {
	if x != nil {
		return x.NotNull
	}
	return false
}

func (x *GormTag) GetAutoIncrement() bool {
	if x != nil {
		return x.AutoIncrement
	}
	return false
}

func (x *GormTag) GetAutoIncrementIncrement() int32 {
	if x != nil {
		return x.AutoIncrementIncrement
	}
	return 0
}

func (x *GormTag) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

func (x *GormTag) GetEmbeddedPrefix() string {
	if x != nil {
		return x.EmbeddedPrefix
	}
	return ""
}

func (x *GormTag) GetAutoCreateTime() bool {
	if x != nil {
		return x.AutoCreateTime
	}
	return false
}

func (x *GormTag) GetAutoUpdateTime() bool {
	if x != nil {
		return x.AutoUpdateTime
	}
	return false
}

func (x *GormTag) GetIndex() bool {
	if x != nil {
		return x.Index
	}
	return false
}

func (x *GormTag) GetUniqueIndex() bool {
	if x != nil {
		return x.UniqueIndex
	}
	return false
}

func (x *GormTag) GetCheck() string {
	if x != nil {
		return x.Check
	}
	return ""
}

func (x *GormTag) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *GormTag) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GormTag) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type HasOneOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foreignkey               string   `protobuf:"bytes,1,opt,name=foreignkey,proto3" json:"foreignkey,omitempty"`
	ForeignkeyTag            *GormTag `protobuf:"bytes,2,opt,name=foreignkey_tag,json=foreignkeyTag,proto3" json:"foreignkey_tag,omitempty"`
	AssociationForeignkey    string   `protobuf:"bytes,3,opt,name=association_foreignkey,json=associationForeignkey,proto3" json:"association_foreignkey,omitempty"`
	AssociationAutoupdate    bool     `protobuf:"varint,4,opt,name=association_autoupdate,json=associationAutoupdate,proto3" json:"association_autoupdate,omitempty"`
	AssociationAutocreate    bool     `protobuf:"varint,5,opt,name=association_autocreate,json=associationAutocreate,proto3" json:"association_autocreate,omitempty"`
	AssociationSaveReference bool     `protobuf:"varint,6,opt,name=association_save_reference,json=associationSaveReference,proto3" json:"association_save_reference,omitempty"`
	Preload                  bool     `protobuf:"varint,7,opt,name=preload,proto3" json:"preload,omitempty"`
	Replace                  bool     `protobuf:"varint,8,opt,name=replace,proto3" json:"replace,omitempty"`
	Append                   bool     `protobuf:"varint,9,opt,name=append,proto3" json:"append,omitempty"`
	Clear                    bool     `protobuf:"varint,10,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *HasOneOptions) Reset() {
	*x = HasOneOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasOneOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasOneOptions) ProtoMessage() {}

func (x *HasOneOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasOneOptions.ProtoReflect.Descriptor instead.
func (*HasOneOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{3}
}

func (x *HasOneOptions) GetForeignkey() string {
	if x != nil {
		return x.Foreignkey
	}
	return ""
}

func (x *HasOneOptions) GetForeignkeyTag() *GormTag {
	if x != nil {
		return x.ForeignkeyTag
	}
	return nil
}

func (x *HasOneOptions) GetAssociationForeignkey() string {
	if x != nil {
		return x.AssociationForeignkey
	}
	return ""
}

func (x *HasOneOptions) GetAssociationAutoupdate() bool {
	if x != nil {
		return x.AssociationAutoupdate
	}
	return false
}

func (x *HasOneOptions) GetAssociationAutocreate() bool {
	if x != nil {
		return x.AssociationAutocreate
	}
	return false
}

func (x *HasOneOptions) GetAssociationSaveReference() bool {
	if x != nil {
		return x.AssociationSaveReference
	}
	return false
}

func (x *HasOneOptions) GetPreload() bool {
	if x != nil {
		return x.Preload
	}
	return false
}

func (x *HasOneOptions) GetReplace() bool {
	if x != nil {
		return x.Replace
	}
	return false
}

func (x *HasOneOptions) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

func (x *HasOneOptions) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

type BelongsToOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foreignkey               string   `protobuf:"bytes,1,opt,name=foreignkey,proto3" json:"foreignkey,omitempty"`
	ForeignkeyTag            *GormTag `protobuf:"bytes,2,opt,name=foreignkey_tag,json=foreignkeyTag,proto3" json:"foreignkey_tag,omitempty"`
	AssociationForeignkey    string   `protobuf:"bytes,3,opt,name=association_foreignkey,json=associationForeignkey,proto3" json:"association_foreignkey,omitempty"`
	AssociationAutoupdate    bool     `protobuf:"varint,4,opt,name=association_autoupdate,json=associationAutoupdate,proto3" json:"association_autoupdate,omitempty"`
	AssociationAutocreate    bool     `protobuf:"varint,5,opt,name=association_autocreate,json=associationAutocreate,proto3" json:"association_autocreate,omitempty"`
	AssociationSaveReference bool     `protobuf:"varint,6,opt,name=association_save_reference,json=associationSaveReference,proto3" json:"association_save_reference,omitempty"`
	Preload                  bool     `protobuf:"varint,7,opt,name=preload,proto3" json:"preload,omitempty"`
}

func (x *BelongsToOptions) Reset() {
	*x = BelongsToOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BelongsToOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BelongsToOptions) ProtoMessage() {}

func (x *BelongsToOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BelongsToOptions.ProtoReflect.Descriptor instead.
func (*BelongsToOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{4}
}

func (x *BelongsToOptions) GetForeignkey() string {
	if x != nil {
		return x.Foreignkey
	}
	return ""
}

func (x *BelongsToOptions) GetForeignkeyTag() *GormTag {
	if x != nil {
		return x.ForeignkeyTag
	}
	return nil
}

func (x *BelongsToOptions) GetAssociationForeignkey() string {
	if x != nil {
		return x.AssociationForeignkey
	}
	return ""
}

func (x *BelongsToOptions) GetAssociationAutoupdate() bool {
	if x != nil {
		return x.AssociationAutoupdate
	}
	return false
}

func (x *BelongsToOptions) GetAssociationAutocreate() bool {
	if x != nil {
		return x.AssociationAutocreate
	}
	return false
}

func (x *BelongsToOptions) GetAssociationSaveReference() bool {
	if x != nil {
		return x.AssociationSaveReference
	}
	return false
}

func (x *BelongsToOptions) GetPreload() bool {
	if x != nil {
		return x.Preload
	}
	return false
}

type HasManyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foreignkey               string   `protobuf:"bytes,1,opt,name=foreignkey,proto3" json:"foreignkey,omitempty"`
	ForeignkeyTag            *GormTag `protobuf:"bytes,2,opt,name=foreignkey_tag,json=foreignkeyTag,proto3" json:"foreignkey_tag,omitempty"`
	AssociationForeignkey    string   `protobuf:"bytes,3,opt,name=association_foreignkey,json=associationForeignkey,proto3" json:"association_foreignkey,omitempty"`
	PositionField            string   `protobuf:"bytes,4,opt,name=position_field,json=positionField,proto3" json:"position_field,omitempty"`
	PositionFieldTag         *GormTag `protobuf:"bytes,5,opt,name=position_field_tag,json=positionFieldTag,proto3" json:"position_field_tag,omitempty"`
	AssociationAutoupdate    bool     `protobuf:"varint,6,opt,name=association_autoupdate,json=associationAutoupdate,proto3" json:"association_autoupdate,omitempty"`
	AssociationAutocreate    bool     `protobuf:"varint,7,opt,name=association_autocreate,json=associationAutocreate,proto3" json:"association_autocreate,omitempty"`
	AssociationSaveReference bool     `protobuf:"varint,8,opt,name=association_save_reference,json=associationSaveReference,proto3" json:"association_save_reference,omitempty"`
	Preload                  bool     `protobuf:"varint,9,opt,name=preload,proto3" json:"preload,omitempty"`
	Replace                  bool     `protobuf:"varint,10,opt,name=replace,proto3" json:"replace,omitempty"`
	Append                   bool     `protobuf:"varint,11,opt,name=append,proto3" json:"append,omitempty"`
	Clear                    bool     `protobuf:"varint,12,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *HasManyOptions) Reset() {
	*x = HasManyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasManyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasManyOptions) ProtoMessage() {}

func (x *HasManyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasManyOptions.ProtoReflect.Descriptor instead.
func (*HasManyOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{5}
}

func (x *HasManyOptions) GetForeignkey() string {
	if x != nil {
		return x.Foreignkey
	}
	return ""
}

func (x *HasManyOptions) GetForeignkeyTag() *GormTag {
	if x != nil {
		return x.ForeignkeyTag
	}
	return nil
}

func (x *HasManyOptions) GetAssociationForeignkey() string {
	if x != nil {
		return x.AssociationForeignkey
	}
	return ""
}

func (x *HasManyOptions) GetPositionField() string {
	if x != nil {
		return x.PositionField
	}
	return ""
}

func (x *HasManyOptions) GetPositionFieldTag() *GormTag {
	if x != nil {
		return x.PositionFieldTag
	}
	return nil
}

func (x *HasManyOptions) GetAssociationAutoupdate() bool {
	if x != nil {
		return x.AssociationAutoupdate
	}
	return false
}

func (x *HasManyOptions) GetAssociationAutocreate() bool {
	if x != nil {
		return x.AssociationAutocreate
	}
	return false
}

func (x *HasManyOptions) GetAssociationSaveReference() bool {
	if x != nil {
		return x.AssociationSaveReference
	}
	return false
}

func (x *HasManyOptions) GetPreload() bool {
	if x != nil {
		return x.Preload
	}
	return false
}

func (x *HasManyOptions) GetReplace() bool {
	if x != nil {
		return x.Replace
	}
	return false
}

func (x *HasManyOptions) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

func (x *HasManyOptions) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

type ManyToManyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jointable                      string `protobuf:"bytes,1,opt,name=jointable,proto3" json:"jointable,omitempty"`
	Foreignkey                     string `protobuf:"bytes,2,opt,name=foreignkey,proto3" json:"foreignkey,omitempty"`
	JointableForeignkey            string `protobuf:"bytes,3,opt,name=jointable_foreignkey,json=jointableForeignkey,proto3" json:"jointable_foreignkey,omitempty"`
	AssociationForeignkey          string `protobuf:"bytes,4,opt,name=association_foreignkey,json=associationForeignkey,proto3" json:"association_foreignkey,omitempty"`
	AssociationJointableForeignkey string `protobuf:"bytes,5,opt,name=association_jointable_foreignkey,json=associationJointableForeignkey,proto3" json:"association_jointable_foreignkey,omitempty"`
	AssociationAutoupdate          bool   `protobuf:"varint,6,opt,name=association_autoupdate,json=associationAutoupdate,proto3" json:"association_autoupdate,omitempty"`
	AssociationAutocreate          bool   `protobuf:"varint,7,opt,name=association_autocreate,json=associationAutocreate,proto3" json:"association_autocreate,omitempty"`
	AssociationSaveReference       bool   `protobuf:"varint,8,opt,name=association_save_reference,json=associationSaveReference,proto3" json:"association_save_reference,omitempty"`
	Preload                        bool   `protobuf:"varint,9,opt,name=preload,proto3" json:"preload,omitempty"`
	Replace                        bool   `protobuf:"varint,10,opt,name=replace,proto3" json:"replace,omitempty"`
	Append                         bool   `protobuf:"varint,11,opt,name=append,proto3" json:"append,omitempty"`
	Clear                          bool   `protobuf:"varint,13,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *ManyToManyOptions) Reset() {
	*x = ManyToManyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManyToManyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManyToManyOptions) ProtoMessage() {}

func (x *ManyToManyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManyToManyOptions.ProtoReflect.Descriptor instead.
func (*ManyToManyOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{6}
}

func (x *ManyToManyOptions) GetJointable() string {
	if x != nil {
		return x.Jointable
	}
	return ""
}

func (x *ManyToManyOptions) GetForeignkey() string {
	if x != nil {
		return x.Foreignkey
	}
	return ""
}

func (x *ManyToManyOptions) GetJointableForeignkey() string {
	if x != nil {
		return x.JointableForeignkey
	}
	return ""
}

func (x *ManyToManyOptions) GetAssociationForeignkey() string {
	if x != nil {
		return x.AssociationForeignkey
	}
	return ""
}

func (x *ManyToManyOptions) GetAssociationJointableForeignkey() string {
	if x != nil {
		return x.AssociationJointableForeignkey
	}
	return ""
}

func (x *ManyToManyOptions) GetAssociationAutoupdate() bool {
	if x != nil {
		return x.AssociationAutoupdate
	}
	return false
}

func (x *ManyToManyOptions) GetAssociationAutocreate() bool {
	if x != nil {
		return x.AssociationAutocreate
	}
	return false
}

func (x *ManyToManyOptions) GetAssociationSaveReference() bool {
	if x != nil {
		return x.AssociationSaveReference
	}
	return false
}

func (x *ManyToManyOptions) GetPreload() bool {
	if x != nil {
		return x.Preload
	}
	return false
}

func (x *ManyToManyOptions) GetReplace() bool {
	if x != nil {
		return x.Replace
	}
	return false
}

func (x *ManyToManyOptions) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

func (x *ManyToManyOptions) GetClear() bool {
	if x != nil {
		return x.Clear
	}
	return false
}

type AutoServerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Autogen       bool `protobuf:"varint,1,opt,name=autogen,proto3" json:"autogen,omitempty"`
	TxnMiddleware bool `protobuf:"varint,2,opt,name=txn_middleware,json=txnMiddleware,proto3" json:"txn_middleware,omitempty"`
	WithTracing   bool `protobuf:"varint,3,opt,name=with_tracing,json=withTracing,proto3" json:"with_tracing,omitempty"`
}

func (x *AutoServerOptions) Reset() {
	*x = AutoServerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoServerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoServerOptions) ProtoMessage() {}

func (x *AutoServerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoServerOptions.ProtoReflect.Descriptor instead.
func (*AutoServerOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{7}
}

func (x *AutoServerOptions) GetAutogen() bool {
	if x != nil {
		return x.Autogen
	}
	return false
}

func (x *AutoServerOptions) GetTxnMiddleware() bool {
	if x != nil {
		return x.TxnMiddleware
	}
	return false
}

func (x *AutoServerOptions) GetWithTracing() bool {
	if x != nil {
		return x.WithTracing
	}
	return false
}

type MethodOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectType string `protobuf:"bytes,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
}

func (x *MethodOptions) Reset() {
	*x = MethodOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodOptions) ProtoMessage() {}

func (x *MethodOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodOptions.ProtoReflect.Descriptor instead.
func (*MethodOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{8}
}

func (x *MethodOptions) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

var file_options_gorm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1018,
		Name:          "gorm.table_prefix",
		Tag:           "bytes,1018,opt,name=table_prefix",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1018,
		Name:          "gorm.ormable",
		Tag:           "varint,1018,opt,name=ormable",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*ExtraField)(nil),
		Field:         1019,
		Name:          "gorm.include",
		Tag:           "bytes,1019,rep,name=include",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1020,
		Name:          "gorm.table",
		Tag:           "bytes,1020,opt,name=table",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1018,
		Name:          "gorm.tag",
		Tag:           "bytes,1018,opt,name=tag",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1019,
		Name:          "gorm.drop",
		Tag:           "varint,1019,opt,name=drop",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*AutoServerOptions)(nil),
		Field:         52119,
		Name:          "gorm.server",
		Tag:           "bytes,52119,opt,name=server",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodOptions)(nil),
		Field:         52119,
		Name:          "gorm.method",
		Tag:           "bytes,52119,opt,name=method",
		Filename:      "options/gorm.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional string table_prefix = 1018;
	E_TablePrefix = &file_options_gorm_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional bool ormable = 1018;
	E_Ormable = &file_options_gorm_proto_extTypes[1]
	// repeated gorm.ExtraField include = 1019;
	E_Include = &file_options_gorm_proto_extTypes[2]
	// optional string table = 1020;
	E_Table = &file_options_gorm_proto_extTypes[3] // bool multi_account = 1021;
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// 字段标签 https://gorm.io/zh_CN/docs/models.html#%E5%AD%97%E6%AE%B5%E6%A0%87%E7%AD%BE
	//
	// optional string tag = 1018;
	E_Tag = &file_options_gorm_proto_extTypes[4]
	// optional bool drop = 1019;
	E_Drop = &file_options_gorm_proto_extTypes[5]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional gorm.AutoServerOptions server = 52119;
	E_Server = &file_options_gorm_proto_extTypes[6]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional gorm.MethodOptions method = 52119;
	E_Method = &file_options_gorm_proto_extTypes[7]
)

var File_options_gorm_proto protoreflect.FileDescriptor

var file_options_gorm_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6f, 0x72, 0x6d, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0a,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x47, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x82, 0x05, 0x0a, 0x07, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6c,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xaa, 0x03, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x4f,
	0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x0e, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67,
	0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x12,
	0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x22, 0xe5, 0x02, 0x0a, 0x10, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73,
	0x54, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x0e, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67,
	0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x12,
	0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x8f, 0x04, 0x0a,
	0x0e, 0x48, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12,
	0x34, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47,
	0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b,
	0x65, 0x79, 0x54, 0x61, 0x67, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x10,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x61, 0x67,
	0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74,
	0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x1a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61,
	0x76, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x93,
	0x04, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b,
	0x65, 0x79, 0x12, 0x31, 0x0a, 0x14, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x6a, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x20,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x16, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x22, 0x77, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x78, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x78, 0x6e,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x22, 0x30, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x40, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x3a, 0x3a, 0x0a, 0x07, 0x6f, 0x72, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x4c, 0x0a,
	0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfb, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x3a, 0x36, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x3a, 0x30, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfa, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x3a, 0x32, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfb, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x3a, 0x52, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x4d, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x7a, 0x79, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_options_gorm_proto_rawDescOnce sync.Once
	file_options_gorm_proto_rawDescData = file_options_gorm_proto_rawDesc
)

func file_options_gorm_proto_rawDescGZIP() []byte {
	file_options_gorm_proto_rawDescOnce.Do(func() {
		file_options_gorm_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_gorm_proto_rawDescData)
	})
	return file_options_gorm_proto_rawDescData
}

var file_options_gorm_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_options_gorm_proto_goTypes = []interface{}{
	(*ExtraField)(nil),                  // 0: gorm.ExtraField
	(*GormFieldOptions)(nil),            // 1: gorm.GormFieldOptions
	(*GormTag)(nil),                     // 2: gorm.GormTag
	(*HasOneOptions)(nil),               // 3: gorm.HasOneOptions
	(*BelongsToOptions)(nil),            // 4: gorm.BelongsToOptions
	(*HasManyOptions)(nil),              // 5: gorm.HasManyOptions
	(*ManyToManyOptions)(nil),           // 6: gorm.ManyToManyOptions
	(*AutoServerOptions)(nil),           // 7: gorm.AutoServerOptions
	(*MethodOptions)(nil),               // 8: gorm.MethodOptions
	(*descriptorpb.FileOptions)(nil),    // 9: google.protobuf.FileOptions
	(*descriptorpb.MessageOptions)(nil), // 10: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 11: google.protobuf.FieldOptions
	(*descriptorpb.ServiceOptions)(nil), // 12: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 13: google.protobuf.MethodOptions
}
var file_options_gorm_proto_depIdxs = []int32{
	2,  // 0: gorm.HasOneOptions.foreignkey_tag:type_name -> gorm.GormTag
	2,  // 1: gorm.BelongsToOptions.foreignkey_tag:type_name -> gorm.GormTag
	2,  // 2: gorm.HasManyOptions.foreignkey_tag:type_name -> gorm.GormTag
	2,  // 3: gorm.HasManyOptions.position_field_tag:type_name -> gorm.GormTag
	9,  // 4: gorm.table_prefix:extendee -> google.protobuf.FileOptions
	10, // 5: gorm.ormable:extendee -> google.protobuf.MessageOptions
	10, // 6: gorm.include:extendee -> google.protobuf.MessageOptions
	10, // 7: gorm.table:extendee -> google.protobuf.MessageOptions
	11, // 8: gorm.tag:extendee -> google.protobuf.FieldOptions
	11, // 9: gorm.drop:extendee -> google.protobuf.FieldOptions
	12, // 10: gorm.server:extendee -> google.protobuf.ServiceOptions
	13, // 11: gorm.method:extendee -> google.protobuf.MethodOptions
	0,  // 12: gorm.include:type_name -> gorm.ExtraField
	7,  // 13: gorm.server:type_name -> gorm.AutoServerOptions
	8,  // 14: gorm.method:type_name -> gorm.MethodOptions
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	12, // [12:15] is the sub-list for extension type_name
	4,  // [4:12] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_options_gorm_proto_init() }
func file_options_gorm_proto_init() {
	if File_options_gorm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_options_gorm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasOneOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BelongsToOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasManyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManyToManyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoServerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_gorm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 8,
			NumServices:   0,
		},
		GoTypes:           file_options_gorm_proto_goTypes,
		DependencyIndexes: file_options_gorm_proto_depIdxs,
		MessageInfos:      file_options_gorm_proto_msgTypes,
		ExtensionInfos:    file_options_gorm_proto_extTypes,
	}.Build()
	File_options_gorm_proto = out.File
	file_options_gorm_proto_rawDesc = nil
	file_options_gorm_proto_goTypes = nil
	file_options_gorm_proto_depIdxs = nil
}
